When would you want to use a remote repository rather than keeping all your work
local?

    When I plan to work on the repository from other computer, when I want to keep a remote backup, 
    or when i want other people to work with me

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because if you have been working on a branch locally, then if you pull the branch from the
    remote you will lose what you have been doing since the last push

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a copy of a branch from one GitHub account to other. Used when one wants to copy a repository
    already on GitHub
    A clone is a copy of repository locally, from a remote server or from a location in the same computer
    Used when copying a repository to a local computer
    A branch is a new commit in the repository that indicates a new version
    Used when one wants to create a new version of the project

What is the benefit of having a copy of the last known state of the remote
stored locally?

   You stay up to date with the latest contributions to your repository. If your local copy is too outdated,
   you would end up having many conflicts when pulling from the remote

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    My collborators and I would have to talk to each others about each changes we wanted to make, but without
    git, we would have to share entire files separately at every change. Additionally, there would be no mechanism
    to view the changes through time, so it would be harder

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    The main benefit is that it allows other people to check your changes and see that it works correctly, 
    before updating the master branch - and potentially breaking it. So you should use it when making collaborations
    to a project that other people use. It also allows people to work on the master branch without worrying about your 
    changes
    The benefit of using the master thread is that the process is easier, since it does not involve merges and potential
    conflicts, so you should use it if there is nobody else using your project, or collaborating with it
    
    
