What happens when you initialize a repository? Why do you need to do it?
	Git creates the .git folder, to store the metadata Git needs
How is the staging area different from the working directory and the repository?
What value do you think it offers?
    The staging area is different from the repository because it contains changes yet to be commited, and it differs from
    the working directory because it olny contains the files that the user requested to be added. It is valuable because
    it allows groups of related files to be added under a single commit, with a relevant commit description.
    
How can you use the staging area to make sure you have one commit per logical
change?
    Add files to the staging area until all changes related to the commit were made, the commit them all at once

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    When adding an experimental feauture, or creating a new version of the project.
    It would help by allowing the user to work on the new feature without altering the official version of
    the project

How do the diagrams help you visualize the branch structure?
    By showing graphically which branches come before the others  

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do? 
    The the lines of code are combined into a new commit. We represent it in a tree structure so we see
    one branch 'merging into' the other

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
   The pro of automatic merging is that it does not take programmer's time, 
   the pro of manual merge is that it gives more control over the result, and allows one to resolve conflicts

